========================================
PANIC SOFTWARE INSTALLATION INSTRUCTIONS 
========================================

The next are the installation instructions for the PANIC software on the
openSuSE 11.1-64 bit

Updated to openSuSE11.4 64bit (4-May-2012) -- (S11.4)

 
********
** OT **
********

1-Java Development Kit 7
========================
- As root, you must download and install the next package:

http://download.oracle.com/otn-pub/java/jdk/7u1-b08/jdk-7u1-linux-x64.rpm


2-NetBeans IDE 7.0.1
====================
- It is not required for the execution of the OT, but for the debuging and development is advised.
- As root or panic user, you must download and install the next package:
http://download.netbeans.org/netbeans/7.0.1/final/bundles/netbeans-7.0.1-ml-javase-linux.sh


3-OT Sources
============

> svn co svn://arch.osn.iaa.es/PANIC/PANICObservationTool OT


**************
** PIPELINE **
**************

0-Some system modules:
======================
zypper install tcl tk  tcl-devel tk-devl python-tk
zypper install python-sphinx



1-Python v2.6 : (default in openSuSE11.1) (v2.7 - S11.4)
===============

1.1 python-devel 

>zypper install python-devel

1.2 IPython 0.8.4 (optional)  (IPython-0.10-11.1 - S11.4)

> zypper install ipython


2-Astromatic
============
Two options:
A) Binary packages
+++++++++++++++++++

2.1 SExtractor v2.8.6: from astromatic get rpm for 64 bit
---------------------------------------------------------
- Download from astromatic.net -->
http://www.astromatic.net/download/sextractor/sextractor-2.8.6-1.x86_64.rpm

> rpm -ivl sextractor-2.8.6-1.x86_64.rpm


2.2 SCAMP v1.7.0 
----------------

- Hard dependende of libplplot9. We have to get libplplot9 rpm build for
  OpenSuSE from :
  ftp://ftp.pbone.net/mirror/ftp5.gwdg.de/pub/opensuse/repositories/home:/makoenig:/science/openSUSE_Factory/x86_64/libplplot9-5.7.1-1.2.x86_64.rpm
  
  * libgfortran is required by libplot9. It must be installed from openSuSE reposotory with zypper install libgfortran43  (libgfortran45 - S11.4)

> rpm -ivl libplplot9-5.7.1-1.2.x86_64.rpm 

- CDSclient package 

> wget http://cdsarc.u-strasbg.fr/ftp/pub/sw/cdsclient.tar.gz
> tar xvfz cdsclient.tar.gz
> cd cdsclient-V.vv
> ./configure
> make
> make install


- Download SCAMP v.1.7.0 from Astromatic.net --->scamp-1.7.0-1.x86_64.rpm

> rpm -ivl scamp-1.7.0-1.x86_64.rpm



2.3 SWARP v2.19.1 : 
------------------
- Download from astromatic.net --> http://www.astromatic.net/download/swarp/swarp-2.19.1-1.x86_64.rpm

> rpm -ivl swarp-2.19.1-1.x86_64.rpm

B) Sources packages
+++++++++++++++++++

B.1) Add science repository in order to install atlas/blas/lapack/fftw (etc):

Add the file /etc/zypp/repos.d/science.repo with the next content:

[science]
name=Software for Scientists and Engineers (openSUSE_11.4)
type=rpm-md
baseurl=http://download.opensuse.org/repositories/science/openSUSE_11.4/
gpgcheck=1
gpgkey=http://download.opensuse.org/repositories/science/openSUSE_11.4/repodata/repomd.xml.key
enabled=1


B.2) Install atlas/blas/lapack/fftw development libraries :

zypper install libatlas3-devel lapack-devel blas-devel

B.3) Sextractor: 
- Download the source tar ball
- run configure, make & make install

B.4) SCAMP: 
- Download the source tar ball
- run configure, make & make install

At the linking stage, I got the next error (suse11.4):

libtool: Version mismatch error.  This is libtool 2.4, but the
libtool: definition of this LT_INIT comes from libtool 2.2.6b.
libtool: You should recreate aclocal.m4 with macros from libtool 2.4
libtool: and run autoconf again.

??????

B.5) SWARP: 
- Download the source tar ball
- run configure, make & make install



3. Numpy v1.6.1
===============

- pre-requisite: gfortran 
>  zypper install gcc-fortran

- download Numpy v1.6.1 from http://new.scipy.org/download.html --> sourceforge
 
> python setup.py build --fcompiler=gnu95 install

NOTE: the binaryx86_64 rpm's files can not be installed, a lot of failed
dependences (python 2.7 , etc....) 

4.Scipy v0.10.0b2 :
===================
- Currently only used in applyDistort.py and third part cosmics, but  not required for PAPI
- pre-requisites : blas3 lapack3

BLAS/Lapack
~~~~~~~~~~~

 > zypper install blas libblas3
 > zypper install lapack liblapack3

- download scipy-0.10.0b2.tar.gz

 > unpack .tar.gz
 > python setup.py install


5. Matplotlib v.1.1.0
=====================

- download from homepage : matplotlib.sourceforge

> unpack
> python setup.py install (as root)



6. PyQt3 
========
* Homepage : http://www.riverbankcomputing.co.uk/software/pyqt/download3
* Dependences:

 - qt3-devel
 - SIP : sip-4.13.tar.gz 
 - PyQt : PyQt-x11-gpl-3.18.1.tar.gz

* qt3-devel

> zypper install qt3-devel

* SIP : 

> tar -xvzf sip-4.13.tar.gz
> python configure.py
> make
> make install

* PyQt

>export QTDIR=/usr/lib64/qt3
>tar -xvzf PyQt-x11-gpl-3.18.1.tar.gz
>python configure.py
>make
>make install

7. PySqlite2
============
Home: http://trac.edgewall.org/wiki/PySqlite
- Requirements: sqlite3, sqlite-devel
> zypper install sqlite3 sqlite3-devel

> download PySqlite v.2.6.3
>unpack tar.gz
>python setup.py build_static install 

8. DS9 + XPA
============
- download from http://hea-www.harvard.edu/RD/ds9/
- ds9 v6.2 binary 64bit
- xpa v2.1.13 binary 64 bit
 

> unpack
> cp ds9 /usr/local/bin
> cp xpa* /usr/local/bin
 
note: optionally, xpa source can also be compiled and installed

9. WCSTools (v3.8.4)
====================
- download from http://tdc-www.harvard.edu/wcstools/
> unpack
> make all
> mkdir -p /usr/local/wcstools/bin
> cp bin/* /usr/local/wcstools/bin

10. PyWCS (v.1.10-4.7)
=================
- download from https://trac.assembla.com/astrolib
- PyFITS is required, but PyWCS can be installed without it
> unpack source tar.gz
> python setup.py install


11. VO.table + ATpy
===================
- vo.table v.0.7.2 from http://stsdas.stsci.edu/astrolib/vo-0.7.2.tar.gz
- atpy v.0.9.5.4 from http://atpy.github.com/

vo.table
--------
> unpack .tar.gz
> python setup.py install

ATpy 
----
> unpack .tar.gz
> python setup.py install

12. PProcess 
============
- download from http://www.boddie.org.uk/python/downloads/pprocess-0.5.tar.gz

> unpack .tar.gz
> python setup.py install


13. STSCI_PYTHON
================

1) Install Pmw v.1.3.2 
-----------------------
From: http://sourceforge.net/projects/pmw/files/Pmw/Pmw.1.3.2/

> unpack 
> python setup.py install


2) IRAF (v.2.14)
----------------
- Follow the intallation instructions from :
http://www.hgt.es/web/index.php?option=com_content&task=view&id=102#whatyouneed

"INSTALLING IRAF 2.12 OVER openSUSE 10.x and 11.x"

they are also valid for v2.14 over openSUSE11.1-64bit
  


2.1) STSDAS & TABLES (v.3.14)
--------------------------
Download birany from : http://www.stsci.edu/resources/software_hardware/stsdas/download

> cp stsci_iraf-3.14.linux.tar.gz /iraf/extern
> cd /iraf/extern
> tar zxf stsci_iraf-3.14.linux.tar.gz
> cd stsci_iraf-3.14
> ./install_helper
 
This script will show you the name of your iraf extern.pkg file and several
lines of configuration. Copy/paste ALL of these lines into extern.pkg, even
if you do not need all of them.

-----
OJO !!! ---> la funcion envget("helpdb") parece que no funciona bien y da problemas 
al lanzar pyraf (unos problemas un tanto raros "canno't import gki" ....etc)

Quitando del extern.pkg los IF's y pondiendo la ruta del helpdb a "mano" no da problemas.
-----
 
If you do not have write access to hlib$extern.pkg, you can place these lines
in your login.cl

If your extern.pkg file already contains definitions for STSDAS, TABLES, or
STECF, remove them. 

2.2) mscred 5.04 (src + bin packages)
----------------
- This external IRAF package is not required by stsci_python, but PAPI for MEF processing
- Download source and binary package from ftp://iraf.noao.edu/iraf/extern/
- Follow the installation instructions from README file (basically, as usual
extenal IRAF packages)

- Set appropiate links:

> ln -s bin.redhat bin.linux
> ln -s bin.redhat bin 



2.3) nmisc v05-06-2003 (mm/dd/yyyy)
-----------------------------------
- Include starfocus & psfmeasure tasks
- Download src and birary packages:
>wget ftp://iraf.noao.edu/iraf/extern-v214/nmisc.tar.Z
>wget ftp://iraf.noao.edu/iraf/extern-v214/nmisc-bin.redhat.tgz

- Follow installation instruction of README file

> mkdir /iraf/extern/nmisc
> cd /iraf/extern/nmisc
> tar -xvzf nmisc.tar.Z
> tar -xvzf nmisc-bin.redhat.tgz

- Set appropiate links:

> ln -s bin.redhat bin.linux
> ln -s bin.redhat bin 

- Edit the $hlib/extern.pkg file and add the next lines:

reset nmisc = /iraf/extern/nmisc
task nmisc = nmisc$nmisc.cl


Fix the bug in mscimarith:

"""
IRAF: --> mscred.mscarith

"""
Hello,

There's a typo in mscred.mscarith.cl which prevents msarith from
running in pyraf.

line# 25 in mscarith.cl should be changed from

int nop1, nop2, nresults, next1, next2, nexts, n

to

int nop1, nop2, nresult, next1, next2, nexts, n

The error in pyraf is:

apply(self._clFunction, parList, kw)
File "<CL script mscred.mscarith>", line 90, in mcsarith
taskObj.nresult = iraf.sections.nimages
File "/usr/stsci/pyssgdev/2.4.2/pyraf/iraftask.py", line 1135, in __setattr__
raise AttributeError(str(e))
AttributeError: Unknown parameter requested: nresult


Nadia Dencheva
"""



3) stsci_python 2.12
--------------------
-Download source package from
http://www.stsci.edu/resources/software_hardware/stsci_python/current/download

and follow the installation instructions from
http://www.stsci.edu/resources/software_hardware/stsci_python/Installation/#installing-from-source

> unpack .tar.gz
> python setup.py install




14. MIDAS 10SEPpl1.1 (for CL environment)
=========================================
See: http://www.eso.org/sci/software/esomidas/

Note: Some patches must be done to the MIDAS 10SEPpl1.1 concerning a
BUG in the catalog routines (see gmail from Klaus Banse at ESO for more details)
Files to patch:
      - midfct.c
      - midcat.c
      - scc.c


15. OTHER SOFTWARE REQUIRED
===========================

- STILTS (http://www.star.bris.ac.uk/~mbt/stilts/) : used by photometry.py for catalog xmatching

  > wget http://www.star.bris.ac.uk/~mbt/stilts/stilts.jar
  > wget http://www.star.bris.ac.uk/~mbt/stilts/stilts

and copy to the directory specified by the _stilts_pathname variable in photometry.py (/home/panic/SOFTWARE/STILTS/stilts)

TO BE CONFIRMED/ENHANCED !



16. OTHER SYSTEM LIBS REQUIRED
==============================

- libcurl4-32bit (and maybe this link : usr/lib/libcurl.so.3 ->
- libcurl.so.4.1.0, required by IRAF::imcombine)
- libgfortran
- libreadline3


PAPI SOURCES
============

#> svn co svn+ssh://integrador@arch.osn.iaa.es/home/integrador/Repository/PANIC/PAPI/trunk/ papi
> svn co svn://arch.osn.iaa.es/PANIC/PAPI/trunk papi

> cd papi/irdr
> cd make all

- edit .bashrc and set environment variables (see environment configuration)


PAPI ENVIRONMENT CONFIGURATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- .bashrc

PYTHONPATH=/home/panic/DEVELOP/PIPELINE/PANIC/trunk
PAPI_HOME=/home/panic/DEVELOP/PIPELINE/PANIC/trunk
TERAPIX=/usr/bin
# IRDR_BIN it is only required for debuging and testint purposes
IRDR_BIN=/home/panic/DEVELOP/PIPELINE/PANIC/trunk/irdr/bin/


export PYTHONPATH PAPI_HOME TERAPIX

alias xg='/usr/local/bin/xgterm -title IRAF -cr red -ms blue -sb -sl 1000 -geometry 80x29 -bg grey -fg black -e cl'
alias panic='cd /home/panic/DEVELOP/PIPELINE/PANIC/trunk'
alias data='cd /data/'
# PANIC-MIDAS PROCEDURES


GEIRSLSTABORT="/home/panic/GEIRS/geirsLstAbort"
CA_FFLTEST=/home/panic/DEVELOP/PIPELINE/PANIC/trunk/simu/caha/ffltest
AUPLAY=/usr/bin/play
GEIRS_DIR=/home/panic/GEIRS
FLAT_COMMAND=/home/panic/DEVELOP/PIPELINE/PANIC/trunk/simu/caha/flats
TECS_SCRIPT=/home/panic/DEVELOP/PIPELINE/PANIC/trunk/simu/caha
PANIC_UTIL=/home/panic/DEVELOP/PIPELINE/PANIC/trunk/MIDAS
PANIC_SCI=/home/panic/DEVELOP/PIPELINE/PANIC/trunk/MIDAS
PATH=$PATH:$HOME/GEIRS/scripts
export GEIRSLSTABORT CA_FFLTEST AUPLAY GEIRS_DIR FLAT_COMMAND TECS_SCRIPT PANIC_UTIL PANIC_SCI




===================================
IRAF installation (opcion suse) - not well documented !!
===================================

Make directories:
~~~~~~~~~~~~~~~~
sudo mkdir /iraf
sudo chgrp root /iraf

[['root' is in my case. add instead what is your username. Normally It should work with 'root'.]]

sudo chown $USER /iraf 

[['USER' means whatever is your username.]]

mkdir /iraf/tar
mkdir /iraf/iraf
mkdir /iraf/irafbin
mkdir /iraf/irafbin/bin.suse
mkdir /iraf/irafbin/noao.bin.suse

cd /iraf/tar
# all sources (generic stuff)
wget http://iraf.noao.edu/iraf/ftp/iraf/v212/PCIX/as.pcix.gen.gz
# iraf binaries
wget http://iraf.noao.edu/iraf/ftp/iraf/v212/PCIX/ib.suse.x86.gz
# noao binaries
wget http://iraf.noao.edu/iraf/ftp/iraf/v212/PCIX/nb.suse.x86.gz

install:
~~~~~~~~
cd /iraf/iraf
tar xfzp /iraf/tar/as.pcix.gen.gz
cd /iraf/irafbin/bin.suse
tar xfzp /iraf/tar/ib.suse.x86.gz
cd /iraf/irafbin/noao.bin.suse
tar xfzp /iraf/tar/nb.suse.x86.gz

Now basic functionality is available. But you probably want more…

Download and install extra’s:
~~~~~~~~~~~~~~~~~~~~~~~~~~~
cd /iraf/tar

ecl (replaces cl):
~~~~~~~~~~~~~~~~~
This thing uses termcap. Use ‘sudo yast -i’ to install it.

wget http://iraf.noao.edu/iraf/ftp/pub/ecl_install_linux.csh
sudo ecl_install_linux.csh

x11iraf (xgterm):
~~~~~~~~~~~~~~~~
mkdir x11iraf
cd x11iraf
wget http://iraf.noao.edu/iraf/ftp/iraf/x11iraf/x11iraf-v1.3.1-bin.suse.tar.gz
tar xfz x11iraf-v1.3.1-bin.suse.tar.gz
sudo ./install

ds9:
~~~
wget http://hea-www.harvard.edu/saord/download/ds9/linux/ds9.linux.4.13.tar.gz
tar xfz ds9.linux.4.13.tar.gz
sudo cp ds9 /usr/local/bin

x11iraf (xgterm):
~~~~~~~~~~~~~~~~
mkdir x11iraf
cd x11iraf
wget http://iraf.noao.edu/iraf/ftp/iraf/x11iraf/x11iraf-v1.3.1-bin.suse.tar.gz
tar xfz x11iraf-v1.3.1-bin.suse.tar.gz
sudo ./install

Settings Usable for all users:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sudo tcsh
cd /iraf/iraf/unix/hlib
setenv iraf /iraf/iraf/
chmod 755 irafuser.csh
source ./irafuser.csh
./install
exit

Change the ownership to iraf:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sudo chown -R /iraf . # change dir owner
cd $hbin # go to HSI bin dir
sudo chown 0 alloc.e # fix alloc.e ownership
sudo chmod 4755 alloc.e # fix permissions





====================================================================================
IRAF installation (debian)- much better documented
====================================================================================
= IRAF Setup on Ubuntu/Debian =

This page describes how to setup IRAF on a 32-bit Ubuntu/Debian machine.
Installation of X11IRAF and DS9 are also included, plus installation of Tables
and STSDAS are shown as an example of adding external packages.

It will be easiest if you just copy-paste the instructions one by one.
Please be sure to read and implement the instructions in [[brackets]] as well.

For 64-bit installation, see -
http://geco.phys.columbia.edu/~rubab/iraf/iraf_step_by_step_installation_64bit

Please send questions or comments to:
khan@astronomy.ohio-state.edu

--------------------------------------------------------------------------------

sudo apt-get install tcsh

wget http://geco.phys.columbia.edu/~rubab/iraf/ldso_1.9.11-15_i386.deb

sudo dpkg -i ldso_1.9.11-15_i386.deb

wget http://geco.phys.columbia.edu/~rubab/iraf/libc5_5.4.46-15_i386.deb

sudo dpkg -i libc5_5.4.46-15_i386.deb

wget http://geco.phys.columbia.edu/~rubab/iraf/termcap-compat_1.2.3_i386.deb

sudo dpkg -i termcap-compat_1.2.3_i386.deb

[[Use System>Administration>Users and Groups to create an account with username 
"iraf", real name "IRAF Maintenance", home directory "/iraf/iraf/local", shell 
"/bin/tcsh", and a secure password. Be sure to grant admin privilege to this 
account. For sudo commands here on, use this password. An easy way to avoid 
confusion is to assign the same password to this account as to your other / 
sys-admin account.]]


>>useradd iraf -d /iraf/iraf/local -s /bin/tcsh


sudo chown -R iraf:iraf /iraf

su iraf

mkdir /iraf/irafbin

mkdir /iraf/irafbin/bin.linux

mkdir /iraf/irafbin/noao.bin.linux

mkdir /iraf/x11iraf

mkdir /iraf/extern

cd /iraf/iraf

wget http://iraf.noao.edu/iraf/ftp/iraf/v214/PCIX/as.pcix.gen.gz

tar -zxf as.pcix.gen.gz

rm as.pcix.gen.gz

cd /iraf/iraf/unix/bin.redhat/

mv * ../bin.linux/

cd /iraf/irafbin/bin.linux

wget http://iraf.noao.edu/iraf/ftp/iraf/v214/PCIX/ib.rhux.x86.gz

tar -zxpf ib.rhux.x86.gz

rm ib.rhux.x86.gz

cd /iraf/irafbin/noao.bin.linux

wget http://iraf.noao.edu/iraf/ftp/iraf/v214/PCIX/nb.rhux.x86.gz

tar -zxpf nb.rhux.x86.gz

rm nb.rhux.x86.gz

cd /iraf/iraf/unix/hlib

source irafuser.csh

[[Choose default paths as will be shown in on-screen prompt parentheses.
Type "y" only where "yes" returns "huh?".]]

sudo ./install

sudo apt-get install libncurses5

cd /iraf/x11iraf/

wget http://iraf.noao.edu/iraf/ftp/iraf/x11iraf/x11iraf-v2.0BETA-bin.redhat.tar.gz
 
tar -zxf x11iraf-v2.0BETA-bin.redhat.tar.gz

mv lib.redhat lib.linux

mv bin.redhat bin.linux

sudo ./install

rm x11iraf-v2.0BETA-bin.redhat.tar.gz

http://hea-www.harvard.edu/saord/ds9/archive/linux/ds9.linux.6.2.tar.gz
 
tar -zxf ds9.linux.6.2.tar.gz

rm ds9.linux.6.2.tar.gz

sudo mv ds9 /usr/local/bin/

exit

cd

wget http://geco.phys.columbia.edu/~rubab/iraf/iraf

sudo chmod u=rwx iraf

mkdir ~/IRAF

cd ~/IRAF

mkiraf

[[Select "xgterm" as your IRAF shell when prompted.]]

-----------------------------------------------------------------------------------------------------------------------------------------------

The command ./iraf will now launch a complete IRAF session containing DS9,
xgterm and ecl, based in ~/IRAF. Alternately, start "xgterm' (typing xgterm), 
cd into the directory where you did "mkiraf", and type "ecl" for enhanced IRAF, 
"cl" for regular IRAF, and "ds9" for standalone DS9 launch. 

Repeat the last 5 steps for each user as needed.

The following steps show how to add external packages. This example install 
Tables and STSDAS. If you don't need extra packages, then you are done already.

-----------------------------------------------------------------------------------------------------------------------------------------------

su iraf

cd /iraf/extern/

mkdir tables stsdas

cd /iraf/extern/tables/

wget http://stsdas.stsci.edu/download/tables_3.12/tables3.12.tar.gz

tar -zxf tables3.12.tar.gz

rm tables3.12.tar.gz

cd bin.linux/

wget http://stsdas.stsci.edu/download/tables_3.12/tables3.12.bin.redhat.tar.gz

tar -zxf tables3.12.bin.redhat.tar.gz

rm tables3.12.bin.redhat.tar.gz

cd /iraf/extern/stsdas

wget http://stsdas.stsci.edu/download/stsdas_3.12/stsdas3.12.tar.gz

tar -zxf stsdas3.12.tar.gz

rm stsdas3.12.tar.gz

cd bin.linux

wget http://stsdas.stsci.edu/download/stsdas_3.12/stsdas3.12.bin.redhat.tar.gz

tar -zxf stsdas3.12.bin.redhat.tar.gz

rm stsdas3.12.bin.redhat.tar.gz

cd /iraf/extern/stsdas

python python/compileall.py ./python

python python/compileall.py ./python/*

nano /iraf/iraf/unix/hlib/extern.pkg

[[Now, edit this file so that it look like what follows. Do not delete any 
existing lines, just add the new lines that has "stsdas" or "tables" or 
"apropos" in them.]]

-----------------------------------------

reset noao = iraf$noao/

task noao.pkg = noao$noao.cl

reset tables = /iraf/extern/tables/
task tables.pkg = tables$tables.cl

reset stsdas = /iraf/extern/stsdas/
task stsdas.pkg = stsdas$stsdas.cl
task apropos = stsdas$apropos.cl

reset helpdb = "lib$helpdb.mip \
,noao$lib/helpdb.mip \
,tables$lib/helpdb.mip \
,stsdas$lib/helpdb.mip \
"

keep

-----------------------------------------

[[Use ctrl-x to exit, answer "y" to save file, press enter to confirm.]

exit

cd

-----------------------------------------------------------------------------------------------------------------------------------------------

Now, tables and stsdas are available for use inside iraf. Some of the other
commonly used packages are ared, mscred, color, ctio, fitsutil, gemini, gmisc,
nmisc, rvsao and xdimsum. Google will help you find the packages and you can set
them up (similar to the example given here for stsdas/tables) following the 
instructions of the host pages.

The following are some notes on alternate way of doing things.

-----------------------------------------------------------------------------------------------------------------------------------------------


1. You can intall iraf without actually creating a separate user called "iraf". 
To do this, simply skip the [[ instructions ]] on how to create a new user, and 
*skip* these two lines -

sudo chown -R iraf:iraf /iraf
su iraf

Instead, precede *all* your commands with "sudo". 


2. Instead of installing the *.deb package of termcap-compat, you can install 
the rpm package. To do this, *skip* these lines -

wget http://geco.phys.columbia.edu/~rubab/iraf/ldso_1.9.11-15_i386.deb
sudo dpkg -i --force-architecture ldso_1.9.11-15_i386.deb
wget http://geco.phys.columbia.edu/~rubab/iraf/libc5_5.4.46-15_i386.deb
sudo dpkg -i --force-architecture libc5_5.4.46-15_i386.deb
wget http://geco.phys.columbia.edu/~rubab/iraf/termcap-compat_1.2.3_i386.deb
sudo dpkg -i --force-architecture termcap-compat_1.2.3_i386.deb

Instead, do these -


sudo apt-get install rpm
wget http://geco.phys.columbia.edu/~rubab/iraf/libtermcap-2.0.8-47.x86.rpm
sudo rpm -iv --force-debian --nodeps  libtermcap-2.0.8-47.x86.rpm
rm libtermcap-2.0.8-47.x86.rpm


3. Here are some other places to get packages from, or if you want to use x11iraf-1.5
wget http://iraf.net/ftp/iraf/v214/PCIX/as.pcix.gen.gz
wget http://iraf.net/ftp/iraf/v214/PCIX/ib.rhux.x86.gz
wget http://iraf.net/ftp/iraf/v214/PCIX/nb.rhux.x86.gz
wget http://iraf.net/ftp/iraf/x11iraf/x11iraf-v1.5DEV-bin.redhat.tar.gz


= END =


