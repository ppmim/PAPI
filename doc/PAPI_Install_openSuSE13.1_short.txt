Last Update: 22-Oct-2014

========================================
PANIC SOFTWARE INSTALLATION INSTRUCTIONS (under openSUSE13.1)
========================================

Summary
*******

0-System
  0.1 Network interfaces
  0.2 NTP Config
  0.3 Proxy Config
  0.4 Interfaces
      0.4.1 Telescopes
      0.4.2 CAHA Archive
      0.4.3 Dome Flat Lamps 


1-GEIRS (see PANIC - GEIRS Installation and User's Manual)

2-OT (see PANIC - OT Installation and User's Manual)
  2.1 Netbeans 7.0
  2.2 Java 1.7u1 ??

3-PAPI (see PANIC - PAPI Installation and User's Manual)
  3.1 PAPI sources
  3.2 Python v2.7.5 and modules (numpy, scipy, matplotlib, PyQt4, ...)
  3.3 Astromatic suite (SExtractor, SCAMP, SWARP)
      - GDLIB and PLPLOT para SCAMP
      - CDSClient
      - blas and fft
  3.4 IRAF v2.16.1
      - x11iraf
      - STSDAS & TABLES (v.3.16)
      - mscred
      - nmisc
  3.5 stsci_python 2.14 (include PyRAF v2.1.6)
  3.6 MIDAS
  3.7 PAPI Setup (.bashrc)

4-LEMON


The next are the installation instructions for the PANIC software on the
openSuSE 13.1-64 bit


************
** SYSTEM **
************
+) Service tags:

$dmidecode -s system-serial-number
panic22=BKNBWX1
panic35=5KNBWX1

+) Network interfaces

The Dell Broadcom BCM5720 Quad-port 1 GB Network card of the PANIC computer is 
configured as follow:

CA2.2m computer
---------------
Port  -   IP
em1   -   150.214.222.119 (main IP address - panic22.caha.es)
em2/3 -   150.214.222.120 (bonding for CAHA Archive; mode=balance_rr - panic22b.caha.es)
em4   -   192.168.70.2 (private network for ROE/MOCON/MOXA - panic22p.caha.es)

CA3.5m computer
---------------
Port  -   IP
em1   -   150.214.222.121 (main IP address - panic35.caha.es)
em2/3 -   150.214.222.122 (bonding for CAHA Archive; mode=balance_rr - panic35b.caha.es)
em4   -   192.168.70.5 (private network for ROE/MOCON/MOXA - panic35p.caha.es)


These configuration can be done from the YaST (Network Devices > Network Settings)
or manually editing the next files:

/etc/resolv.conf
/etc/sysconfig/network/config
/etc/sysconfig/network/ifcfg-em[1,2,3,4]
/etc/sysconfig/network/ifcfg-bond0
/etc/sysconfig/network/routes
/etc/sysconfig/proxy
/etc/sysconfig/postfix
/etc/hosts
/etc/HOSTNAME

After seting up the configuration, it is recommended to reboot the system.



PANIC Hardware (private VLAN 70)
--------------------------------
panicmoxa.caha.es  - (192.168.70.10)
panicmocon.caha.es - (192.168.70.20)
panicroe.caha.es   - (192.168.70.30)

Network devices
---------------
Masks: 255.255.255.0
DNS: 150.214.222.10
Gateways: 150.214.222.1 / 192.168.70.1  
Proxy: derfel.caha.es:3128
NTP server: derfel.caha.es

+) NTP Config

First, UTC clock should be set in yast2, and then config the NTP as follow:

> zypper install ntp
> sudo chkconfig --add ntp
> sudo service ntp status|start

Add to /etc/ntp.conf next lines for NTP server:

## IAA
server ntp.iaa.csic.es burst iburst

## ROA
server hora.roa.es  burst iburst

## CAHA
server derfel.caha.es burst iburst
## Spain - es.pool.ntp.org
server 1.es.pool.ntp.org iburst
server 1.europe.pool.ntp.org iburst
server 2.europe.pool.ntp.org iburst
## openSuSE

server 0.opensuse.pool.ntp.org iburst
server 1.opensuse.pool.ntp.org iburst
server 2.opensuse.pool.ntp.org iburst
server 3.opensuse.pool.ntp.org iburst


+) Proxy Config

1. Add to /etc/sysconfig/proxy the next configuration for the proxy:

PROXY_ENABLED="yes"
HTTP_PROXY="http://derfel.caha.es:3128"

2. In addition, for the OT and SCAMP applications it is need to setup the shell 
with the next variables:

export http_proxy=derfel.caha.es:3128
export _JAVA_OPTIONS='-Dhttp.proxyHost=derfel.caha.es -Dhttp.proxyPort=3128'


+) Crontab Config (see 2.5.6 of GEIRS manual)
For the automated inclusion of temperatures and pressures of the 2 temperature 
channels of a LakeShore controller, the 8 temperature channels of a LakeShore 
monitor and of one Pfeier pressure in GEIRS(FITS output and GUI) the next lines
are required in the crontab:

from BD:
> Hi Jose Miguel,
>
> I've organized the temperature logs as follows:
> - obsXX have the cronjob to poll the data, write to panictemp.log
> - obsXX have cronjob glogRotate to write daily files
> - users panic and staff have a symbolic link to obsXX's panictemp.log
> - panic cronjobs have still glogRotate, but 1h later than for obsXX 
> that they don't change the panictemp.log any more, but all other log 
> files
> - old daily temperature filesfrom panic were copied to obsXX user, 
> where now a continuous archive exists starting at the MPIA lab tests 
> starting May 2014.
>
> Both done on panic22 and panic35.


** On panic22, idem but**

For obs22 user:

10 12 * * * export CAMHOME=${HOME}/GEIRS ; cd $CAMHOME/log ; ./glogRotate.sh
*/3 * * * *  GEIRS/scripts/panictempress -i 192.168.70.10 >> GEIRS/log/panictemp.log 2> GEIRS/log/panictemp.err

For panic user:
10 13 * * * export CAMHOME=${HOME}/GEIRS ; cd $CAMHOME/log ; ./glogRotate.sh ; rm panictemp.log ; ln -s /home/obs35/GEIRS/log/panictemp.log panictemp.log

** On panic35, idem but**

+ For obs35 user:

1-58/3 * * * * GEIRS/scripts/panictempress -i 192.168.70.10 >> GEIRS/log/panictemp.log 2> GEIRS/log/panictemp.err
to prevent problems when polling at the same time from two machines

+ For panic user:
10 13 * * * export CAMHOME=${HOME}/GEIRS ; cd $CAMHOME/log ; ./glogRotate.sh ; rm panictemp.log ; ln -s /home/obs35/GEIRS/log/panictemp.log panictemp.log


+) FTP Config

For the CAHA Archive, the PANIC computer must have installed and setted up an
FTP server. Next steps must be followed:

1. Install vsftp (Very Secure FTP Daemon)
  
   > zypper install vsftpd
   > zypper install yast2-ftp-server

1.1 Edit /etc/xinetd.d/vsftpd  and comment disable=yes
1.2 Type >rcxinetd --full-restart vsftpd

--- next is not required ---
2. Setting up the FTP server with Yast:

If the YaST FTP Server module is not available in the system, install the yast2-ftp-server package.

To configure the FTP server using YaST, follow these steps:

Open YaST Control Center and choose Network Services > FTP Server or run the yast2 ftp-server command as root.

If there is not any FTP server installed in your system, you will be asked which server to install when the YaST FTP Server module starts. Choose a server and confirm the dialog. If there are two servers installed, choose the preferred server and click OK.

In the Start-Up dialog, configure the options for starting of the FTP server. For more information, see Section 31.1, Starting the FTP Server.

In the General dialog, configure FTP directories, welcome message, file creation masks and various other parameters. For more information, see Section 31.2, FTP General Settings.

In the Performance dialog, set the parameters that affect the load on the FTP server. For more information, see Section 31.3, FTP Performance Settings.

In the Authentication dialog, set whether the FTP server should be available for anonymous and/or authenticated users. For more information, see Section 31.4, Authentication.

In the Expert Settings dialog, configure the operation mode of the FTP server, SSL connections and firewall settings. For more information, see Section 31.5, Expert Settings.

Press Finish to save the configurations.

sshd config
===========
To enable the keep alive system-wide (root access required), edit /etc/ssh/ssh_config; to set the settings for just your user, edit ~/.ssh/config (create the file if it doesn't exist). Insert the following:

Host *
    ServerAliveInterval 300
    ServerAliveCountMax 2
You can also make your OpenSSH server keep alive all connections with clients by adding the following to /etc/ssh/sshd_config:

ClientAliveInterval 300
ClientAliveCountMax 2

CAHA ARCHIVE
============
- To get access to the archive2 machine to get a bigger area for storate, we have
to add the next line to the /etc/fstab file:

archivo2:/ARCHIVE/PANICCALIBS   /data1/ARCHIVE  nfs     defaults,mountvers=3,nfsvers=3 0 0

Note: we use NFS v3 to preserve the user permissions, and that way only 'panic' user 
have Write access to the archive2 File system; the rest of users on panic22/panic35 have
only 'read' permissions.




*************************
** Telescope Interface **
*************************
The telescope interface of CAHA telescopes (2.2m and 3.5m) is EPICS-based and it
is composed by a set of Tcl/Tk scripts. Those scripts use the OAGTclTk library to
interac with the EPICS systems. That library substitute the old caTCL EPICS 
extension (et_wish). The library can be get from next site:

http://www.aps.anl.gov/Accelerator_Systems_Division/Accelerator_Operations_Physics/installationGuide_Linux.shtml

1. Install the OAGTclTk library:

>rpm -ivvl OAGTclTk-1.21-1.openSUSE.12.3.x86_64.rpm

(anymore required: now the posets.caha.es telescope proxy interface is used, and accessed via rsh with no password required)

2. Copy the TECS scrtips:

> mkdir $HOME/TECS/scripts
> scp -av user@source.caha.es:TECS/scripts $HOME/TECS/scripts

3. Add the TELESCOPE variable to the shell:

export TELESCOPE=CA2.2m (or CA3.5m)

Actually, that variable is not required for GEIRS anymore, as it is set on the 
after the interactive selection in the GEIRS GUI. However, the command line 
scripts (t_xxxx) still need that variable defined on the shell.

4. Add the TECS_SCRIPT variable to the shell. It is used by GEIRS when calling
to TECS scripts.

export TECS_SCRIPT=$HOME/TECS/scripts


*******************************
** Dome flat lamps interface **
*******************************
- Requirements: rsh package installed

> zypper install rsh

- Under ~/GEIRS/scripts directory is the lamp.sh script. That script call
remotely (rsh) the 'rflats' procedure on ultra3 or ultra1.


The lamp interface with the PANIC system is implemented throught the RSH protocol.
A remote procedure is called on ultra3 (CA2.2m) or ultra1 (CA3.5m) as follow:

rsh -l staff ultra3 /disk-a/staff/FFL/RFLATS/rflats STATUS

This call will return the flat field lamps status.

The command syntax is nearly the same as for the old flats command. The only
difference is  rflats  includes the  STATUS  argument:

rflats [ ALLOFF || STATUS ] || [ L<x>  ON || OFF [i] ]

Where:
x   is the lamp number (from 1 to 5)
i   is the intensity (0-9) of lamp 5

When lamp 5 is set to ON, you MUST select an intensity from 0 to 9
All arguments are not case sensitive except ALLOFF and STATUS
which must be upper case in both cases

If called from rsh, the command takes about 2-3 seconds for it
execution.

rflats' return could be:

0  -->  Command completed successfully.
1  -->  Command could not be finished successfully. This could be due to a communication problem.
xxxxxn -->  Exit from STATUS argument. First five bits (xxxxx) correspond with 
lamps 1 to 5. If 0, the associated lamp is off, while if 1, the lamp is on. The
last bit (n) is the lamp 5 intensity, and could be from 0 to 9.
Once an intensity is selected, this intensity remains inside the registry even 
if the lamp 5 is off, so an exit like 000007 is totally correct. This indicates
that although lamp 5 is off, the last intensity it had was intensity 7.

ERRORS [10-21]:

10  -->  Not enough arguments
11  -->  First argument is not ok (Must be L<x>  0<x<5)
12  -->  First argument is not ok (first digit must be L)
13  -->  First argument is not ok (Second digit must be
0<x<5)
14  -->  Second argument is not ok
15   -->  Not enough arguments for lamp 5 or incorrect
intensity
16  -->  Cannot check if FFL is working
17  -->  FFL is working and blocking serial port
18  -->  Configuration file rflats.conf not found
19  -->  Not allowed (user/host)
20  -->  Cannot open Serial Port
21  -->  Cannot initialize Serial Port

The argument ALLOFF doesn't return anything. This is because the PLC is
returning nothing at all. My suggestion is to ask for STATUS imediately
after ALLOFF. The exit shoul be some thing like 00000n (where n is the lamp
5 last intensity)

Finally, some real examples from monster (user guindos):

monster>  rsh -l staff ultra3 /disk-a/staff/FFL/RFLATS/rflats STATUS
000009

(All lamps are off. Last intensity for lamp 5 was 9)

monster>  rsh -l staff ultra3 /disk-a/staff/FFL/RFLATS/rflats l4 on
0

(set lamp 4 to ON. The return 0 indicates all went ok)

monster>  rsh -l staff ultra3 /disk-a/staff/FFL/RFLATS/rflats l5 on 4
0

(set lamp 5 to ON with an intensity of 4. Return shows ok)

monster>  rsh -l staff ultra3 /disk-a/staff/FFL/RFLATS/rflats STATUS
000114

(STATUS shows lamps 4 and 5 are on, and lamp 5 has intensity 4)

monster>  rsh -l staff ultra3 /disk-a/staff/FFL/RFLATS/rflats ALLOFF

(All to OFF - No exit status from PLC)

monster>  rsh -l staff ultra3 /disk-a/staff/FFL/RFLATS/rflats STATUS
000004

(STATUS shows all lamps are off and last intensity of lamp 5)

 
***********
** GEIRS **
***********
Requirements
------------

*) sudo zypper install gsl gsl-devel

*) sudo zypper install readline5



*) system setup

root> echo 134217728  > /proc/sys/kernel/shmmax

From Clemens:
"""
I needed to use as root:
- install gnuplot ==>sudo zypper install gnuplot
- set /proc/sys/kernel/shm* to larger sizes
- set kernel.shm* in /etc/sysctl.conf to get correct shm-setting after a reboot:

kernel.shmall = 128000000000
kernel.shmmax = 4000000000
kernel.shmseg = 40960


Tras email con RM el 3-Feb-2014, los valores mas adecuados serían:

kernel.shmall = 15728640   # 60 GB
kernel.shmmax = 4294967296  # 4 GB
kernel.shmseg = 40960

y lo más importante, CAMSHMSZ en GEIRS/scripts/GENERIC:

setenv CAMSHMSZ `cat /proc/meminfo | fgrep MemTotal | awk '{printf "%d",$2/3072}'` 




*)GEIRS and fonts

rjm> that seem to be prepared in your /usr/share/fonts .
rjm> First one would check that /etc/fonts/fonts.conf is basically including
rjm> /usr/share/fonts, then that fonts-config has been creating these.
rjm> This here is rather an incomplete X11-installation than anything related
rjm> to GEIRS.
rjm> 
rjm> man xset
rjm> ~/.fonts.conf
rjm> man fc-list
rjm> SuSEconfig --module fonts
rjm> 

Clemens whishes to add that the installation of an
(incomplete) font set can be completed by calling "SuSEconfig --module fonts"
if one adds the option "--force" to the last line of
/sbin/conf.d/SuSEconfig.fonts .


*)install /usr/src/PlxLinux[_v6.50]


*)after launch GEIRS (start_panic_new), create next empty file:

    ~/tmp/fitsheader_panic.txt (ESTO YA NO ES NECESARIO, ahora usamos geirsPhduAdd.panic !!!)


* Actualizar el fichero ~/GEIRS/QueueFiles para que escriba el fichero de log para el QL:



#!/bin/bash
#
# removing and or adding luci instrument lab-fits to fits-data-file
#
#
echo `date +%FT%H:%M:%S` $1 $2 >> ~/tmp/fitsGeirsWritten
#modify_fits_hdr -v -a ~/tmp/fitsheader_panic.txt $1 >>~/GEIRS/log/add_panic_fits.log
export ret=$?
if [ $ret -eq 0 ]; then
    echo `date '+%Y-%m-%d_%Hh%Mm%S'` $1   >>~/tmp/fitsfiles.corrected
else
    echo `date '+%Y-%m-%d_%Hh%Mm%S'` "ERROR $ret in modifying fits-header of $1"  >>~/tmp/fitsfiles.corrected
fi
exit $ret



* Remove  ~/tmp/irmotor_lfpos.panic for simulation mode ???

*) geirs2Panic 

--
Install external packages first:
  - cfitsio from http://heasarc.gsfc.nasa.gov/fitsio/
  - CCfits from http://heasarc.gsfc.nasa.gov/fitsio/CCfits/

cd src

Edit Makefile to have the compiler and linker find the associate
headers and libraries.

Type
    make

Move the executable geirs2Panic according to your PATH
or link it to a directory so your shell will find it.

R. J. Mathar, www.mpia.de/~mathar, 2012-10-23
--

wget ftp://heasarc.gsfc.nasa.gov/software/fitsio/c/cfitsio3310.tar.gz
wget http://heasarc.gsfc.nasa.gov/fitsio/CCfits/CCfits-2.4.tar.gz
wget http://www.mpia-hd.mpg.de/~mathar/progs/geirs2Panic.tar.gz

Note: 
----
On openSuSE12.2 I had to add the lines

#include <unistd.h>

to heade files in order to compile the sources.


 
********
** OT **
********

1-Java Development Kit 7
========================
- As root, you must download and install the next package:

> wget http://download.oracle.com/otn-pub/java/jdk/7u1-b08/jdk-7u1-linux-x64.rpm
> rpm -ivl 

or manually with 

> wget jdk-7u55-linux-x64.tar.gz
> tar -xvzf jdk-7u51-linux-x64.tar.gz /usr/local/
> update-alternatives --install /usr/bin/java java /usr/local/jdk1.7.0_55/bin/java 300
> update-alternatives --install /usr/bin/javac javac /usr/local/jdk1.7.0_55/bin/javac 300
> update-alternatives --config java
> update-alternatives --config javac


2-NetBeans IDE 7.0.1 (only for development)
====================
- It is not required for the execution of the OT, but for the debuging and development is advised.
- As root or panic user, you must download and install the next package:
http://download.netbeans.org/netbeans/7.0.1/final/bundles/netbeans-7.0.1-ml-javase-linux.sh


3-OT Sources
============

> svn co svn://arch.osn.iaa.es/PANIC/PANICObservationTool OT


**************
** PIPELINE **
**************

0-Sumary of system packages:
============================

zypper install libreadline5 (PENDIENTE)
zypper install tcl tk  tcl-devel tk-devl python-tk
zypper install python-sphinx
zypper install python-qt4-devel
zypper install python-devel
zypper install ipython
zypper install python-numpy python-numpy-devel
zypper install python-scipy
zypper install python-matplotlib python-matplotlib-tk
zypper install python-qt4 
zypper install libXmu6-32bit  (needed by xgterm)
zypper install cfitsio libcfitsio-devel
zypper install python-pip
zypper install mupdf ( para mostrar pdfs desde QL de forma rápida )
zypper install gsl gsl-devel

+ And for sphinx (latex2pdf):
sudo zypper install texlive-threeparttable
sudo zypper install texlive-cjk-latex-extras
sudo zypper install texlive-wrapfig
sudo zypper install texlive-multirow
sudo zypper install texlive-upquote
sudo pip install sphinx_bootstrap_theme
sudo pip install sphinx_rtd_theme

+ LEMON Requirements:
sudo zypper install openmpi-devel python-gtk p7zip

In one single line:

zypper install tcl tk  tcl-devel tk-devl python-tk python-sphinx python-qt4-devel python-devel ipython python-numpy python-numpy-devel python-scipy python-matplotlib python-matplotlib-tk python-qt4 libXmu6-32bit cfitsio libcfitsio-devel python-pip openmpi-devel python-gtk

1-Python v2.7.5 : (default in openSuSE13.1)
===============

1.1 python-devel
----------------

> zypper install python-devel

1.2 IPython 0.12.1 (optional)

> zypper install ipython



1.2 Python Modules
-------------------
- Then, after install the new version of Python interpreter, we must install
again all the python modules, ie:

 * IPython 0.12.1 (optional)
 * numpy > 1.6
 * scipy
 * matplotlib
 * stsci_python
 * PyQt4
 * Astropy
 * montage-wrapper-0.9.8.tar.gz (optional?)
 


2a-Astrometry.net (v0.50)
=================

1- Create a tmp dir where untar the file to be compiled and installed (into /usr/local/astrometry)
> mkdir astrometry.install
> cd astrometry.install
> wget http://astrometry.net/downloads/astrometry.net-0.46.tar.gz  --> astrometry.net-0.50
> tar xvzf astrometry.net-0.46.tar.gz
> ./configure
> make install
(by default will be installed on /usr/local/astrometry)


- Grab index files from http://broiler.astrometry.net/~dstn/4200/
> wget http://broiler.astrometry.net/~dstn/4200/wget.sh
(uncomment 4201 and 4200 lines)
> ./wget.sh

- Config index DB in /usr/local/astrometry/etc/astrometry.cfg

    add_path /data2/Astrometry.net/data/4200-indexes


2b-Astromatic
=============
Two options:
A) Binary packages
+++++++++++++++++++

2.1 SExtractor v2.19.5-1: from astromatic get rpm for 64 bit
-------------------------------------------------------------
- Download from astromatic.net -->
http://www.astromatic.net/download/sextractor/sextractor-2.19.5-1.x86_64.rpm

> rpm -ivl sextractor-2.19.5-1.x86_64.rpm


2.2 SCAMP v1.7.0 
----------------

2.2.1- CDSclient package 

> wget http://cdsarc.u-strasbg.fr/ftp/pub/sw/cdsclient.tar.gz
> tar xvfz cdsclient.tar.gz
> cd cdsclient-3.77
> ./configure
> make
> make install

If CDSclient is to be run behind a firewall, it need to be configurared to run
with a proxy using 'http_proxy' environment:

  >http_proxy=http//your_proxy:your_port; 
  >export http_proxy

  MPIA --> ftp-proxy.mpia.de:3128  (21-Nov-2011)

For more info visit http://cdsarc.u-strasbg.fr/doc/cdsclient.html

2.2.2- PLPLOT para SCAMP (para generar ficheros png's): (new version)

     1) Instalar gd-libgd 
     
       > zypper install gd  (/usr/lib64/libgd.so.2 -> libgd.so.2.0.0)
            
 
    3) Descargar la plplot-5.9.4 (pues parece que es la que recomiendan en el foro de SCAMP  http://www.astromatic.net/forum/showthread.php?tid=761)
       aunque la 5.9.9 también funciona.
       
       http://sourceforge.net/projects/plplot/files/plplot/
       
    
    4) Compilar plplot-5.9.9 (la version 5.10.0 se compila, pero al correr SCAMP da un error tipo "scamp: symbol lookup error: scamp: undefined symbol: c_plwid)
    
      Aunque en el repositorio de openSUSE_13.1 encontramos la libreria plplot, si la instalamos luego SCAMP no se entiende con ella, pues al ejecutar
      SCAMP no pide el nro. del device para el plot (o algo así). Da igual que le digamos CHECKPLOT_DEV=NULL.
      
      > zypper install plplot) --> plplot-5.9.9-16.1.5.x86_64 --> /usr/lib64/libplplotd.so.11 ---> NO NOS SIRVE !!
      
      Por tanto, hay que compilar e instalar manualmente:
      
       > cd plplot-5.9.9
       > mkdir build
       > cd build 
       > cmake -DCMAKE_INSTALL_PREFIX=/usr/local/plplot599 -DBUILD_TEST=ON ../../plplot-5.9.9 >&cmake.out
       > ccmake ..
         y editar a mano 
 
          GDI32_LIBRARY /usr/local/lib/libgd.so (en la 599 no es necesario, lo detecta bien)
          ENABLE_python OFF (pues da un problema al no encontrar un .h de numpy ??)
          PLD_png ON
          PLD_tcl OFF (dan error de compilacion)
          PLD_tk  OFF (dan error de compilacion)

        básicamente eso.
        
     > make 
     > sudo make install
     MUY IMPORTANTE hacer en enlace o copia (como se prefiera):
     > ln -s /usr/local/plplot599/lib/libplplotd.so.11.0.0 /usr/lib64/libplplotd.so.9 
     
     y listo !!! SCAMP debe generar los graficos PNG sin problema (glup!).
        
    
2.2.2 (old)- PLPLOT para SCAMP (para generar ficheros png's): (long and old version)

     1) Descargar el fuente de gd-libgd (con zypper no consigo encontrar dicha libreria) de https://bitbucket.org/pierrejoye/gd-libgd/overview
        (la última version a fecha 03-Marzo-2014 no compilaba bien!!! tuve que usar la que tenía yo de May-2013)

        >git clone https://bitbucket.org/libgd/gd-libgd.git      

     2) Compilar dicha libreria (libgd):  --> zypper install gd  (/usr/lib64/libgd.so.2 -> libgd.so.2.0.0)
       
       > wget https://bitbucket.org/libgd/gd-libgd/downloads/libgd-2.1.0.tar.gz
       > tar xvzf
       > ./configure --prefix=/usr/local
       > make install
       
 
    3) Descargar la plplot-5.9.4 (pues parece que es la que recomiendan en el foro de SCAMP  http://www.astromatic.net/forum/showthread.php?tid=761)
       aunque la 5.9.9 también funciona.
       
       http://sourceforge.net/projects/plplot/files/plplot/
       
    
    4) Compilar plplot-5.9.9 (la version 5.10.0 se compila, pero al correr SCAMP da un error tipo "scamp: symbol lookup error: scamp: undefined symbol: c_plwid)
    
    (zypper install plplot) --> plplot-5.9.9-16.1.5.x86_64 --> /usr/lib64/libplplotd.so.11 ---> NO NOS SIRVE, no se entiende con SCAMP aunque le digamos CHECKPLOT_DEV=NULL
!!
      
       > cd plplot-5.9.9
       > mkdir build
       > cd build 
       > cmake -DCMAKE_INSTALL_PREFIX=/usr/local/plplot599 -DBUILD_TEST=ON ../../plplot-5.9.9 >&cmake.out
       > ccmake ..
         y editar a mano 
 
          GDI32_LIBRARY /usr/local/lib/libgd.so (en la 599 no es necesario, lo detecta bien)
          ENABLE_python OFF (pues da un problema al no encontrar un .h de numpy ??)
          PLD_png ON
          PLD_tcl OFF (dan error de compilacion)
          PLD_tk  OFF (dan error de compilacion)

        básicamente eso.
        
     > make 
     > sudo make install
     > ln -s /usr/local/plplot599/lib/libplplotd.so.11.0.0 /usr/lib64/libplplotd.so.9

     IMPORTANTE: copiar /usr/local/lib/libgd.so en /usr/local/plplot599/lib/ pues si no se quejará el PLPLOT de que no la encuentra.
     (no es necesario !!)

     > export PLPLOT_LIB=/usr/local/plplot599
     (esto tampoco es necesario !!!!!)
     
     Lo realmente importante es copiar o enlazar la nueva libreria plplotd que usa SCAMP. En el sistema (openSUSE13.1) 
     hay instalada una por defecto (so.9) pero que no trae el soporte para PNG y que da el error 
      
	  "scamp: symbol lookup error: scamp: undefined symbol: c_plimage"
     
     Por tanto, MUY IMPORTANTE hacer en enlace o copia (como se prefiera) 
     
      >>>> ln -s /usr/local/plplot599/lib/libplplotd.so.11.0.0 /usr/lib64/libplplotd.so.9
     
     y listo !!! SCAMP debe generar los graficos PNG sin problema (glup!).
     
     
     FAQ:
       My program exits with the error message Unable to either (1) open/find or (2) allocate memory for the font file

       The PLplot library can't find the font files plstnd5.fnt and plxtnd5.fnt. Set the environment variable PLPLOT_LIB to the directory where these files are, e.g. export PLPLOT_LIB=/usr/local/plplot/data. 
     
     
    HA costado lo suyo !!! lo ideal sería que SCAMP (E.Bertin) migrara a la libraría cairo para generar los PNGs !!!
    
    Sin embargo, si le digo a SCAMP que genere ficheros JPEG no lo hace (Requested device jpeg not available), pregunta cada vez por el tipo de fichero....por qué ?
    PDF's si lo genera bien, incluso con mejor calidad que los PNG !!
    PS: en B/N y no completos
    Recompilo PLPLOT library con PLD_jpeg ON y ya si genera SCAMP los JPEG's, pero de una calidad pésima, inservibles !!!


    
3- Download src SCAMP v.2.0.4 from Astromatic.net

  wget http://www.astromatic.net/download/scamp/scamp-2.0.4.tar.gz

  - el .rpm no se deja instalar por dos dependencias de libcsironn, libqhull que no consigo resolver,
  por lo que decido compilar el fuente de SCAMP tal que:

./configure --with-atlas-libdir=/usr/lib64/atlas/ --with-plplot-libdir=/usr/local/plplot599/lib/ --with-plplot-incdir=/usr/local/plplot599/include/plplot/ --enable-static --enable-threads
./make
./make install
(todo OK sin problemas)




2.3 SWARP v2.19.1: ---> NEW v2.38.0 (incluye modo CLIPPED para el combine, aunque no lo uso de momento)
------------------
- Download from astromatic.net --> http://www.astromatic.net/download/swarp/swarp-2.38.0-1.x86_64.rpm

> rpm -ivl swarp-2.38.0-1.x86_64.rpm


o bien la compilamos sin problemas tal que:

./configure --enable-threads
./make

Intentando ver el .xml que genera psfex, me paso un buen rato hasta que me doy cuenta de que hay que 
modificar la configuración de firefox para poder verlos tal que:

    http://www.astromatic.net/blog

(en chrome no se como se hace)
    
además hay que hacer "make install" para que instale los xslt en /usr/loca/share/psfex;




3. Numpy v1.7.1 (default in openSUSE-13.1)
===============
* With zypper:

> zypper install python-numpy python-numpy-devel

4.Scipy v0.12.0 (default in openSUSE-13.1) 
===============
> zypper install python-scipy

- Currently only used in applyDistort.py and third party software 'cosmics', 
but  not required for PAPI.
- pre-requisites : blas3 lapack3+


5. Matplotlib v.1.3.0
=====================
* With zypper:

>zypper install python-matplotlib python-matplotlib-tk


7. PyQt4 (default in openSUSE13.1)
========

zypper install python-qt4 
zypper install python-qt4-devel (optional, pero necesario para pyuic4)
(The following NEW packages are going to be installed:
  python-qt4-devel python-qt4-utils python-sip-bin python-sip-devel)
  

8. DS9 + XPA (v7.3b5)
=====================
- Mejor instalar la v7.3.x, pues soluciona un problema que me estaba ocurriendo
la tener configurador en iraf el valor stdimage=im4096 e intentar leer imagenes
más pequeñas (ej. 16x16); tareas como imexam o psfmeasure no funcionaban bien
y daban el mensaje: Warning: Pixels out of bounds

Para más detalles: http://stackoverflow.com/questions/24919639/pixels-out-of-bounds-error-in-iraf


ds9
---
#wget http://ds9.si.edu/download/linux64/ds9.linux64.7.2.tar.gz
wget http://ds9.si.edu/download/linux64/ds9.linux64.7.3.2.tar.gz

tar xfz ds9.linux64.7.2.tar.gz
sudo cp ds9 /usr/local/bin

To set proxy server in ds9:  under Edit menu, select Preferences>, HTTP 
                          then type proxy host and proxy port in the pop-up box
                          also, save Preferences:   under Edit menu, select Preferences>,  Save Preferences
It is required to enable query catalogs at CAHA:

proxy host: derfel.caha.es
proxy port: 3128

Then, restart DS9.
 

For 

xpa library
-----------
wget http://ds9.si.edu/download/linux64/xpa.linux64.2.1.14.tar.gz
> tar -xvzf
> cp * /usr/local/bin


9. Astropy (v0.3.1) --> astropy-0.4.2.tar.gz
===================

(It already includes atpy and vo.table, and PyFITS !!!)

http://www.astropy.org/

To install Astropy from source, you can either use

> pip install astropy

Alternatively, you can download a tarball for the latest release of astropy from PyPI, then expand the tarfile and run:

> python setup.py install  (option used with openSUSE13.1)

to build and install the package. For more on installing from source code, see the relevant part of the documentation.


12. STSCI_PYTHON (v2.14) - (PyRAF is part of the stsci_python package )
========================
- This package is required by PyRAF, but now PyRAF is part of the stsci_python package.

- Before intall STSCI_PYTHON, IRAF must be installed:



12.1) IRAF v2.16.1 x86_64
----------------------
Doc --> http://iraf.noao.edu/iraf//ftp/ftp/v216/PCIX/RELEASE.txt

wget ftp://iraf.noao.edu/iraf/v216/PCIX/iraf.lnux.x86_64.tar.gz

To install this release, you should download the binary distribution
file appropriate for your machine (either linux or osx) and then identify
yourself as one of the following users and follow the steps described:

    - I am installing for the First Time:

    1)  Create an 'iraf' directory (preferrably /iraf/iraf) and unpack
        the distribution file for your platform there.
    2)  Define $iraf in your environment (with a trailing '/')
        > setenv iraf /iraf/iraf/
    3)  Run the $iraf/install script to install the system for personal
      use (or with root permission and the '--system' flag for a
      system installation).

> sudo mkdir -p /iraf/iraf
> cd /iraf/iraf
> export iraf=/iraf/iraf/
> wget ftp://iraf.noao.edu/iraf/v216/PCIX/iraf.lnux.x86_64.tar.gz
> tar -xvzf iraf.lnux.x86_64.tar.gz
> sudo ./install --system


12.1.1) Externs (MSCRED, STSDAS & TABLES)
---------------------------------
Since IRAF v2.15, the system is shipped with no defined external packages,
instead we assume packages will be installed using this new feature.  To
begin, simply execute the 'configure' script in this directory to create
the files needed.
(see $iraf/extern/README)


> cd /iraf/iraf/extern
> ./configure
> make check
> make mscred (v5.05) --> need patch, see below
> make stsdas (tables also installed)

12.1.2) x11iraf (xgterm) 
---------------------
> sudo mkdir /iraf/x11iraf
>cd /iraf/x11iraf (temporal directory used only for packege installation)
> sudo wget http://iraf.noao.edu/iraf/ftp/iraf/x11iraf/x11iraf-v2.0BETA-bin.linux.tar.gz
( or wget http://iraf.net/ftp/iraf/x11iraf/x11iraf-v1.5DEV-bin.redhat.tar.gz) 
> sudo tar -zxf x11iraf-v2.0BETA-bin.linux.tar.gz
> sudo rm x11iraf-v2.0BETA-bin.linux.tar.gz
> ln -s bin.linux bin.suse
> ln -s lib.linux lib.suse
#> mkdir /usr/lib64/X11/app-defaults (??? no es necesario)
> sudo ./install


* Dependences

 > sudo zypper install libXmu6-32bit
 
12.1.3) mscred 5.05 (patch)
------------------------
Fix the bug in mscimarith:

"""
IRAF: --> mscred.mscarith

"""
Hello,

There's a typo in mscred.mscarith.cl which prevents msarith from
running in pyraf.

line# 25 in mscarith.cl should be changed from

int nop1, nop2, nresults, next1, next2, nexts, n

to

int nop1, nop2, nresult, next1, next2, nexts, n

The error in pyraf is:

apply(self._clFunction, parList, kw)
File "<CL script mscred.mscarith>", line 90, in mcsarith
taskObj.nresult = iraf.sections.nimages
File "/usr/stsci/pyssgdev/2.4.2/pyraf/iraftask.py", line 1135, in __setattr__
raise AttributeError(str(e))
AttributeError: Unknown parameter requested: nresult


Nadia Dencheva
"""


12.1.4) nmisc v05-06-2003
----------------------
Since IRAFv2.15, nmisc is any more required. Included in obsutil package:

 obsutil.psfmeasure - Measure PSF sizes from stellar images
 obsutil.starfocus - Determine direct focus variations from stellar images

12.1.5) login.cl
-------------
- Next setup must be on the IRAF login.cl file:

  1) Create a .iraf directory and run 'mkiraf' from it.
  2) comment out "chkupdate" command on login.cl
  3) Add next lines:
      set     stdimage        = imt4096
      set     imtype          = "fits"

(quizás todo eso se podría hacer en /iraf/iraf/unix/hlib/zzsetenv.def)

(P) Además habría que ver que valores obligatorios debería tener el login.cl !!
por lo menos en referencia a los paquetes que debe cargar por defecto:

  images
  noao
  utilities
  tv
  ...
  
In principle, by default 
  PyRAF uses $HOME/iraf/login.cl 
  IRAF  uses $HOME/.iraf/login.cl

So,  $HOME/iraf/login.cl  is mandatory for PAPI, and $HOME/.iraf/login.cl is 
recommended if we want run IRAF CL console. 
The best is to create a symbolic link as follow:

> cd $HOME
> ln -s .iraf iraf

This should be done by papi_setup.sh.



12.2) stsci_python 2.14 (include PyRAF v2.1)
-----------------------------------------
zypper install python-pip
#pip install d2to1
#pip install distribute !!!
pip install stsci.distutils
pip install stscipython

-- output of seconf execution of pip install stscipython --
Requirement already satisfied (use --upgrade to upgrade): stscipython in /usr/local/lib/python2.7/site-packages
Requirement already satisfied (use --upgrade to upgrade): d2to1>=0.2.9,<=0.2.99 in /usr/local/lib/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): stsci.distutils>=0.3.2,<=0.3.99 in /usr/local/lib/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): pyfits>=3.1.1,<=3.1.99 in /usr/local/lib64/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): stsci.tools>=3.2,<=3.2.99 in /usr/local/lib/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): stsci.ndimage>=0.10.0,<=0.10.99 in /usr/local/lib64/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): stsci.convolve>=2.1,<=2.1.99 in /usr/local/lib64/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): pywcs>=1.10.2,<=1.10.99 in /usr/local/lib64/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): stwcs>=1.1.0,<=1.1.99 in /usr/local/lib/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): stsci.stimage>=0.2,<=0.2.99 in /usr/local/lib64/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): stsci.imagestats>=1.4,<=1.4.99 in /usr/local/lib64/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): stsci.imagemanip>=1.1,<=1.1.99 in /usr/local/lib64/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): stsci.image>=2.1,<=2.1.99 in /usr/local/lib64/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): pysynphot>=0.9.5,<=0.9.99 in /usr/local/lib64/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): pydrizzle>=6.4.0,<=6.4.99 in /usr/local/lib64/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): nictools>=1.1.0,<=1.1.99 in /usr/local/lib/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): calcos>=2.19.7,<=2.19.99 in /usr/local/lib64/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): astrolib.coords>=0.39.4,<=0.39.99 in /usr/local/lib64/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): wfpc2tools>=1.0.1,<=1.0.99 in /usr/local/lib/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): wfc3tools>=1.1,<=1.1.99 in /usr/local/lib/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): stsci.sphinxext>=1.2.1,<=1.2.99 in /usr/local/lib/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): stsci.numdisplay>=1.6,<=1.6.99 in /usr/local/lib/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): stistools>=1.0.1,<=1.0.99 in /usr/local/lib/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): reftools>=1.6.4,<=1.6.99 in /usr/local/lib64/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): pyraf>=2.1,<=2.1.99 in /usr/local/lib64/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): opuscoords>=1.0.1,<=1.0.99 in /usr/local/lib64/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): multidrizzle>=3.4.0,<=3.4.99 in /usr/local/lib/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): fitsblender>=0.2,<=0.2.99 in /usr/local/lib/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): drizzlepac>=1.1.8,<=1.1.99 in /usr/local/lib64/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): costools>=1.1,<=1.1.99 in /usr/local/lib/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): acstools>=1.7.2,<=1.7.99 in /usr/local/lib64/python2.7/site-packages (from stscipython)
Requirement already satisfied (use --upgrade to upgrade): distribute in /usr/lib/python2.7/site-packages (from d2to1>=0.2.9,<=0.2.99->stscipython)
Requirement already satisfied (use --upgrade to upgrade): numpy in /usr/lib64/python2.7/site-packages (from pyfits>=3.1.1,<=3.1.99->stscipython)

--


13. Aladin software tool (v7.5)
===============================
Not mandatory, but it might be useful for the observer during the observation 
or data inspection/analysis.
Aladin is an interactive software sky atlas allowing the user to visualize 
digitized astronomical images, superimpose entries from astronomical catalogues
 or databases, and interactively access related data and information from the 
Simbad database, the VizieR service and other archives for all known sources 
in the field.

http://aladin.u-strasbg.fr/aladin.gml

>download Aladin.tar
> cd /usr/local
>sudo tar -xvf Aladin.tar

So, Aladin launcher must be installad at next path:

  >  /usr/local/Aladin/Aladin

(P) 14. MIDAS 10SEPpl1.1 (for CL environment)
=========================================
See: http://www.eso.org/sci/software/esomidas/

Note: Some patches must be done to the MIDAS 10SEPpl1.1 concerning a
BUG in the catalog routines (see gmail from Klaus Banse at ESO for more details)
Files to patch:
      - midfct.c
      - midcat.c
      - scc.c


15. PAPI SOURCES
================

git clone https://github.com/ppmim/PAPI.git ~/papi (public)
git clone git@github.com:ppmim/PAPI.git ~/papi
git clone jmiguel@feynman.iaa.es:/home/jmiguel/DEVELOP/papi.git

> cd papi/irdr
> make clean; make all

- edit .bashrc and set environment variables (see environment configuration)


PAPI ENVIRONMENT CONFIGURATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- .bashrc

alias xg='/usr/local/bin/xgterm -title IRAF -cr red -ms blue -sb -sl 1000 -geometry 80x29 -bg grey -fg black -fn 10x20 -e cl'
alias panic='cd ${PAPI_HOME}'
alias data='cd /data/'

### GEIRS environment ###
###
# In case the operator has already set TELESCOPE in the shell,
# GEIRS accept this. Otherwise, the operator must select on the
# GEIRS init window the right telescope. Note: It does not move the cold stop.
export TELESCOPE="CA2.2m"
export CAMHOME=${HOME}/GEIRS

### PAPI environment ###
##
export PAPI_HOME=${HOME}/DEVELOP/papi
PYTHONPATH=$PYTHONPATH:$PAPI_HOME
PAPI_CONFIG=$PAPI_HOME/config_files/papi.cfg
PAPI_PROD=/data2/out
# Proxy required for cdsclient at MPIA
http_proxy=derfel.caha.es:3128
export PYTHONPATH PAPI_HOME PAPI_CONFIG http_proxy

# PANIC-MIDAS PROCEDURES
AUPLAY=/usr/bin/play
GEIRS_DIR=$HOME/GEIRS
TECS_SCRIPT=$HOME/TECS/scripts
ASTROMETRY=/usr/local/astrometry/bin

PATH=$PATH:$HOME/GEIRS/scripts:$HOME/GEIRS/binrjm:$ASTROMETRY:$HOME/bin:$HOME/TECS/scripts
export GEIRSLSTABORT CA_FFLTEST AUPLAY GEIRS_DIR FLAT_COMMAND TECS_SCRIPT PANIC_UTIL PANIC_SCI

LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib64
export LD_LIBRARY_PATH
export QT_GRAPHICSSYSTEM=native

### OT environment ###
export _JAVA_OPTIONS='-Dhttp.proxyHost=derfel.caha.es -Dhttp.proxyPort=3128'
### end OT environment ###

### Para enviar el sonido al SOR del 2.2
export AUDIOSERVER="xt22:0"
###

### Para enviar el sonido al SOR del 3.5
export AUDIOSERVER="xt32:0"
###


IRAF ENVIRONMENT CONFIGURATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Next is required for PAPI when using PyRAF:

> mkdir iraf
> cd iraf; mkiraf



LEMON requirements
==================

- zypper install openmpi-devel (para Montage)
- zypper install python-gtk (para GUI)
- zypper install p7zip (p7zip-9.20.1-10.1.4.x86_64)


Remote Control
==============
x2go
====
1) Add x2go repository

> zypper ar http://download.opensuse.org/repositories/X11:/RemoteDesktop:/x2go/openSUSE_13.1 x2go

2) Install x2go packages

> zypper install x2goserver
Note: If nxclient was already installed (eg. nomachine_4.2.27_1_x86_64.rpm), there is a conflict with 
the colormap; in this case, we must copy the /usr/share/X11/rgb.txt to  /usr/NX/share/rgb
in order to substitute the NX (wrong) rgb file. Otherwise, we could get error messages as below:
(In fact, nxclient is not required, because x2goserver install its own nxagent; 
X2Go server currently uses NXv3 based libraries and tools for the backend implementation of X2Go,
x2goagent (NX-like XServer)).

 

$ emacs
Undefined color: "black"

$ds9
Undefined color : "white" ....

(see https://bbs.archlinux.org/viewtopic.php?id=108217)


> zypper install x2goclient (actally, not required)

VNC
===
Option 1
--------
See: http://activedoc.opensuse.org/book/opensuse-reference/chapter-5-remote-access-with-vnc

From the KDE desktop, select the YaST icon, enter the root password, and select OK; then select Network Services > Remote Administration.

Select Allow Remote Administration; then select Finish

It installs a lot of x11 packages, but finally it does noe work !!! 
Se supone que eso instala el vncserver, que es un script 
para lanzar una servidor Xvnc (un servidor “especial”), un x11 virtual. 


Option 2
--------

Instalación de VNC server en panic22:


1) comprobar que el paquete x11vnc-xx-xx está instalado
rpm -qa |grep x11vnc
2) Creamos el password :
 > x11vnc -storepasswd
3) Lo podemos lanzar simplemente con:
> x11vnc -display :0
o mejor
> /usr/bin/x11vnc -forever -auth guess -rfbport 5900 -rfbauth /home/panic/.vnc/passwd -o /home/panic/.vnc/x11vnc.log -display :0


y para que arranque cada vez que entra el usuario panic,

echo "/usr/bin/x11vnc -forever -rfbport 5900 -rfbauth ~/.vnc/passwd -o ~/.vnc/x11vnc.log  -display :0" > ~/.kde4/Autostart/x11vnc.sh

chmod +x ~/.kde4/Autostart/x11vnc.sh


* You can test the startup script:

~/.kde4/Autostart/x11vnc.sh

También habría que comprobar que en el Firewall está abierto el puerto 5900 (display 0), 5901 (display 1), etc …

/sbin/SuSEfirewall2 stop | start | stop
