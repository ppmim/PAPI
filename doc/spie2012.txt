Advanced PANIC quick-look tool using Python
===========================================

José-Miguel Ibáñez*(a), Antonio J.García(a), Clemens Storz(b), Josef W. Friedb, Matilde Fernández(a), Julio F. Rodríguez Gómez(
a)Instituto de Astrofísica de Andalucía (CSIC), Glorieta de la Astronomía 3, E-18008 Granada, Spain  
          b Max-Planck-Institut für Astronomie  / Königstuhl 17, D-69117 Heidelberg, Germany
Abstract
--------  
PANIC, the Panoramic Near Infrared Camera, is an instrument for the Calar Alto
Observatory which is currently being integrated in laboratory and whose first
light is foreseen for this year. We present here how the PANIC Quick-Look tool (PQL) and pipeline (PAPI) are being implemented, leveraging existing rapid programming Python technologies and packages, together with well-known astronomical software suites (Astromatic, IRAF) and parallel processing techniques. We will briefly describe the structure of the PQL tool, whose original characteristics are in the use of the SQLite database and PyQt, a Python binding of the GUI toolkit Qt.  
Keywords: quick-look, pipeline, data reduction, python

1. INTRODUCTION 
---------------
In 2005, the German-Spanish Observatory of Calar Alto (CAHA) changed its administrative status, and since then Germany and Spain have given financial support in equal shares for the development of new instrumentation for the observatory through their institutions Max-Planck-Gesellschaft (MPG) and Consejo Superior de Investigaciones Científicas (CSIC).
In the frame of this agreement, the idea of building a new infrared camera for the 2.2m telescope, as the first instrument of the consortium, was suggested by both astronomical communities, supported by the Scientific Advisory Committee and approved by the Executive Committee.
The PAnoramic Near Infrared Camera (PANIC), is a new instrument for CAHA (Calar Alto Observatory) whose first light is foreseen for end this year. This instrument is the first being built inside the Spanish-German consortium signed between MPG-MPIA and CSIC-IAA for the development of new instrumentation for CAHA.
PANIC is a wide-field infrared imager for the Ritchey-Chrétien focus of the CAHA 2.2m and 3.5m telescopes. The optics is a folded single optical train, pure lens optics, with a plate scale of 0.45"/px (18 µm) at the 2.2m telescope and 0.23"/px at the 3.5m. A mosaic of four Hawaii-2RG of 2k x 2k with a gap of 3mm between the single detectors, will give a field of view of 0.5x0.5 degrees and 0.25x0.25 degrees, respectively. This cryogenic instrument will cover the photometric bands from Z to Ks (0.8 to 2.5 µm). PANIC will have a low thermal background due to cold stops. 
The instrument's cold opto-mechanics consists of 9 lenses up to 255 mm diameter and three rectangular folding mirrors. It will be operated at about 80 K, achieved by liquid nitrogen cooling. A compact filter unit can carry up
to 19 filters distributed over four filter wheels. The mass limit of 400 kg at the 2.2m telescope requires a low mass design: a cryostat with dished ends, and a separate small LN2 vessel for cooling of the detector only and all parts
are light weighted and made of aluminum wherever possible.

At the moment the instrument is beeing integrated at the MPIA labs. This means that is not yet possible to set detailed specifications of accuracy and stability of the data reduction.

2. PANIC SOFTWARE ARCHITECTURE



3. PIPELINE SOFTWARE MODULES

3.1 Language 

Since the beginning, the programming language selected was with no much 
doubts, Python, one of the princial language used nowadys for data processing
in astrophisics. Python is a is an interpreted, interactive, object-oriented programming
language. It is a "very high level language" or "scripting language," often compared 
to Perl, Tcl, Scheme, and Java. It combines remarkable power with a very clear and simple 
syntax that resembles the "pseudocode" one might use to describe the essentials of an 
algorithm. Implementations are availabe for free on all major (and many minor) 
computing platforms. Python is an "open source" project with a very liberal license.


4. QUICK-LOOK TOOL
------------------
The quick-look software is a mandatory requirement for most of the
astronomical instruments. Observers must have fast access to their data in
order to evaluate if the required quality of their observations has been
archieved. We hava adopted, and already implemented for PANIC, ta simple and
fast solution for the quick-look software taking advantage of two rather well
known astronomical tools: DS9 and IRAF. We have embedded the former into the
observation software panel from which we can also have access to some commands
of IRAF tha we have opportunely customized for quick-look purposes. Our choice
offers several advantages, among which is the saving of time devoted to
project, design and test new software.

Embedding the binary version of DS9 into the observation software is a
particulary powerful choice because DS9 is highly customizable at level of
graphical user interface: it is ver easy to hide, add or modify the widgets of
this application. Moreover, if we also consider the posibility of communicate
with other tasks and the XPA protocol allowing external processes fo access
and control DS9 data and algorithms, we can state that DS9 is a very adaptable
and complete application.


Quick-Look requirements:
-----------------------
Quick-look reduction will not require any initial configuration, and can be
started at any moment by the user.
• Reduction will start automatically when a new frame has been obtained with
PANIC. The reduction of a single frame should take on the order of 10 seconds
or less.
• The software will make use of a pre-determined master dark, master flat field and
master gain-map. Depending on the stability of the instrument, these frames will be 
taken from a database, or be determined just before the night of observations.
• The quick-look reduction will perform dark subtraction, flat correction and
astrometric calibration (field distortion removal).
• Normalization wrt chip 1.
• If the data is binned (1x2, 2x1, 2x2) or windowed, the package will perform
at least order extraction.
• The reduction package will display the extracted spectral orders on screen and
save them to disk.
  
4.1 Automatic reduction process
-------------------------------
One key feature of the PQL is to have the application "sniffing" for new files
written to disk from the detector (GEIRS). Once a new file is detected in the
target directory, the PQL automatically reduces the data frames and coadds
them to previously reduced observations of the same object (dataset).




 

5. FURTHER WORK

6. CONCLUSION


ACKNOWLEDGMENTS
We would like to thank the CAHA, MPIA and IAA staff who gave us inputs and suggestions to improve the PANIC software functionalities during the meetings held at their institutes.

REFERENCES
[1] Anderson J., King I.R., "An Improved Distortion Solution for the Hubble Space Telescope's WFPC2" PASP 115,113 (2003)
[2] Baumeister H., at al., "PANIC: the new panoramic NIR camera for Calar Alto", Proc. SPIE 7014, 70142R (2008)
[3] Bertin E., Arnouts, S. "SExtractor: Software for source extraction", A&AS 117, 393 (1996)
[4] Bertin E., "Automatic astrometric and photometric calibration with SCAMP", ASP Conf. Series 351,112 (2006)
[5] Calabretta M.,  Greisen. E., "Representation of Celestial co-ordinates in FITS" ,A&A, (2000) (This paper was re-writed with 2002 paper of the same authors)
[6] Cárdenas M.C. ,et al,"Preliminary optical design of PANIC: a wield-field infrared camera for CAHA", Proc. SPIE  7014,70142Q (2008)
[7] Fried J.W., Baumeister H., Huber A., Laun W., Rohloff R.R., Max-Planck-Institut für Astronomie (Germany); Vázquez M.C., Instituto de Astrofísica de Andalucía (Spain), "Opto-mechanical design of PANIC", Proc. SPIE 7735, 138 (2010)
[8] PANIC preliminary design review, PANIC team (2007), (internal communication)
[9] Sabbey C. N., Lewis J. R., McMahon R. G., Irwin M. J., "Infrared Imaging Data Reduction Software and Techniques",ASP Conf. Series 238, 317 (2001)


NOTES
=====

The pipeline can be run in two modes:
quick look and science. The goal of the quick look pipeline is to deliver a processed image to the observer within five minutes of image acquisition. This
enables immediate assessment of the image quality and instrument performance. The quick look pipeline differs from the science pipeline in
two areas: it applies calibration files from the most recent science pipeline run instead of the calibration frames from the current run, and it
implements a subset of the full science pipeline reduction, terminating with the coaddition after the first sky background subtraction.
The science pipeline provides the observer with reduced data shortly after the end of the observing run, early in the morning as soon as all the files are proccessed.
To provide the highest quality data a limited amount of human intervention is necessary, mainly in rejecting poor
calibration frames. This pipeline has been running on a 2x QuadCore AMD opteron CPU with 32GB and openSuSE11.1 64bits.
(Lewis et al., 1999).


PyRAF
=====

A quick look procedure must be fast, efficient, reliable, user­friendly and able to provide the 
observer with the data he/she needs to estimate the quality of the observations.
IRAF  scripts  are  not  the  best  way  to  make  IRAF  to  interface  and  interact  with  external 
applications, whereas the use of an external scripting language like Tcl makes communication 
with IRAF environment particularly simple and fast. The scheme below illustrates how simple 
can be the control of IRAF from a Tcl level script:
- write a short procedure able to perform a “read event handler”;
- open a process pipeline, in read/write mode, with the IRAF CL shell;
- use the fconfigure command to set the properties of I/O channels;
- use the fileevent command to register the previous procedure;
- set the CL stdgraph mode as xgterm (or eps for plotting purposes);
- go, in sequence, to IRAF tasks and launch their commands passing all the needed parameters.

As an example we show the result of an application devised to get a quick visualization of any 
spectral order of an IR echellogram.This application can be used  to compare  spectral orders
obtained,  by  extraction  from  the 2D 

DS9
===

To allow a quick­look inspection of the acquired frames we have embedded the 
standalone  application  SAOImage  DS9  in  the  main  OS  GIANO  GUI.  DS9 
incorporates the X Public Access (XPA) mechanism to allow external processes 
to access and control their own data, algorithms and functions.
The XPA communication method uses sockets to exchange information between 
processes: this message system works very well both at the programming and at 
the shell levels. However XPA was not devised to have a full control on the DS9 
at GUI level. The simplest way to interact with DS9 at low level is the use of the 
Tk toolkit.  In fact to customize DS9 as a suitable tool for a quick­look during an 
observation it is not necessary to modify its source code. Thanks to the powerful 
Tcl/Tk “send” mechanism is possible to personalize the GUI of DS9 according to 
the  software  requirements:  it  is  easy  to  disable  the  toolbar  on  the  top  of  DS9, 
insert/remove  entries,  buttons,  frames  and  so  on.  As  an  example:  a  few  items 
allowing to personalize the DS9 GUI:
 



HABLAR DE :
  
  1) como se usa el multiprocessing, reparto de tareas en los cores, etc; adjuntar gráfico
  2) problemas de Python como lenguaje interpretado ===> PyUnit
  3) Añadir agradeciemiento que me pasará MF


